name: 'Template:Validate GOLANG codebase'

on:
  workflow_call:

jobs:
  validate:
    name: 'Validate golang layer'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v5

      - name: 'Install Golang'
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: false

      - name: 'Go fmt check'
        run: |
          fmt_out=$(gofmt -s -l .)
          if [ -n "$fmt_out" ]; then
            echo "::error::run gofmt -s on these files:"
            echo "$fmt_out"
            exit 1
          fi

      - name: 'Go vet'
        run: go vet ./...

      - name: 'golangci lint'
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4.0
          args: --timeout 4m --config .golangci.yaml

      - name: 'Test (race) + Coverage'
        run: |
          go test ./... -race -coverprofile=coverage.out -covermode=atomic
          go tool cover -func=coverage.out > coverage.txt

      # need a free Codecov account + repo token
      # https://about.codecov.io/tool/github-actions
      # - name: Upload to Codecov
      #   if: ${{ secrets.CODECOV_TOKEN != '' }}
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     files: coverage.out
      #     flags: unittests
      #     fail_ci_if_error: false
